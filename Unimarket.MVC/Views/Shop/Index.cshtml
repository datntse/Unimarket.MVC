@using Unimarket.MVC.Models.ViewModels
@model Unimarket.MVC.Models.ViewModels.ResponseProductVM

@{
    ViewData["Title"] = "Shop Page";
    var minPrice = ViewData["MinPrice"] != null ? (float)ViewData["MinPrice"] : 1000f;
    var maxPrice = ViewData["MaxPrice"] != null ? (float)ViewData["MaxPrice"] : 999999f;
    var listCate = ViewData["ListCate"] as List<CategoryVM>;
    var itemsPerPage = 9;
    var totalPages = (int)Math.Ceiling((double)Model.Total / itemsPerPage);
}

<div class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__links">
                    <a href="@Url.Action("Index","Home")"><i class="fa fa-home"></i> Trang chủ</a>
                    <span>Sản phẩm</span>
                </div>
            </div>
        </div>
    </div>
</div>

<section class="shop spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-3">
                <div class="shop__sidebar">
                    <form method="get" action="@Url.Action("Index", "Shop")" onsubmit="return validateInputs()">
                        <div class="sidebar__filter">
                            <div class="section-title">
                                <h4>Sắp xếp theo tiền</h4>
                            </div>
                            <div class="filter-range-wrap">
                                <div id="price-range" class="price-range ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content"
                                     data-min="@minPrice" data-max="@maxPrice"></div>
                                <div class="range-slider">
                                    <div class="price-input">
                                        <p style="font-size:12px;">Tiền:</p>
                                        <input style="font-size:12px;" type="number" id="minPriceInput" name="MinPrice" placeholder="Min Price" value="@minPrice" step="5" /><p style="font-size:12px;">VNĐ - </p>
                                        <input style="font-size:12px;" type="number" id="maxPriceInput" name="MaxPrice" placeholder="Max Price" value="@maxPrice" step="5" /><p style="font-size:12px;">VNĐ</p>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <button type="submit" style="font-size: 14px; color: white; text-transform: uppercase; letter-spacing: 2px; font-weight: 700; display: inline-block; padding: 5px 16px 5px 24px; border: 2px solid #ffa436; border-radius: 20px;background-color:#ffa436;">
                                Áp dụng
                            </button>
                        </div>
                        <div class="sidebar__color">
                            <div class="section-title">
                                <h4>Sắp xếp theo loại</h4>
                            </div>
                            <div class="size__list color__list">
                                @foreach (var category in listCate)
                                {
                                    <div style="display:flex;">
                                        <input type="checkbox" name="categoryNames" value="@category.Name" @(ViewData["categoryNames"] != null && ((List<string>)ViewData["categoryNames"]).Contains(category.Name) ? "checked" : "") />
                                        <label style="margin-top:8px;" for="@category.Name">@category.Name</label>
                                    </div>
                                }
                            </div>
                            <button id="filterButton" style="font-size: 14px; color: white; text-transform: uppercase; letter-spacing: 2px; font-weight: 700; display: inline-block; padding: 5px 16px 5px 24px; border: 2px solid #ffa436; border-radius: 20px;background-color:#ffa436;">
                                Áp dụng
                            </button>
                        </div>
                        <a href="@Url.Action("Index")">Xóa tìm kiếm</a>
                    </form>
                </div>
            </div>
            <div class="col-lg-9 col-md-9">
                <div class="row">
                    @foreach (var item in Model.Data)
                    {
                        <div class="col-lg-4 col-md-6">
                            <div class="product__item">
                                <div class="product__item__pic set-bg" data-setbg="@item.ImageUrl">
                                    <ul class="product__hover">
                                        <li><a href="@item.ImageUrl" class="image-popup"><span class="arrow_expand"></span></a></li>
                                        <li><a asp-controller="ProductDetail" asp-action="Index" asp-route-id="@item.Id"><span class="icon_search"></span></a></li>
                                        <li>
                                            <form id="addToCartForm-@item.Id" asp-controller="Cart" asp-action="AddToCart" asp-route-itemId="@item.Id" method="post">
                                                <a href="#" onclick="submitAddToCartForm('@item.Id'); return false;">
                                                    <span class="icon_bag_alt"></span>
                                                </a>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                                <div class="product__item__text">
                                    <h6><a asp-controller="ProductDetail" asp-action="Index" asp-route-id="@item.Id">@item.Name</a></h6>
                                    <div class="rating">
                                        <i class="fa fa-star"></i>
                                        <i class="fa fa-star"></i>
                                        <i class="fa fa-star"></i>
                                        <i class="fa fa-star"></i>
                                        <i class="fa fa-star"></i>
                                    </div>
                                    <div class="product__price">@string.Format("{0:#,0}", item.Price)VNĐ</div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col-lg-12 text-center">
                        <div class="pagination__option">
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <a href="@Url.Action("Index", new {
                                    currentPage = i-1,
                                    MinPrice = ViewData["MinPrice"],
                                    MaxPrice = ViewData["MaxPrice"],
                                    categoryNames = ViewData["categoryNames"],
                                    sortBy = ViewData["sortBy"],
                                    isAscending = ViewData["isAscending"]
                                })" class="@(i == Model.CurrentPage ? "active" : "")">
                                    @i
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<script>
    $(function () {
        var $priceRange = $('#price-range');
        var minPrice = parseFloat($priceRange.data('min'));
        var maxPrice = parseFloat($priceRange.data('max'));

        // Initialize the slider
        $priceRange.slider({
            range: true,
            min: 1000,  // Minimum value you want for slider
            max: 999999, // Maximum value you want for slider
            values: [minPrice, maxPrice],
            slide: function (event, ui) {
                $('#minPriceInput').val(ui.values[0]);
                $('#maxPriceInput').val(ui.values[1]);
            }
        });

        // Update slider when inputs change
        $('#minPriceInput').change(function () {
            var min = parseFloat($(this).val());
            var max = parseFloat($('#maxPriceInput').val());
            $priceRange.slider('values', 0, min);
        });

        $('#maxPriceInput').change(function () {
            var min = parseFloat($('#minPriceInput').val());
            var max = parseFloat($(this).val());
            $priceRange.slider('values', 1, max);
        });
    });

    function validateInputs() {
        var minPriceInput = document.getElementById('minPriceInput');
        var maxPriceInput = document.getElementById('maxPriceInput');
        var minPrice = parseFloat(minPriceInput.value);
        var maxPrice = parseFloat(maxPriceInput.value);

        if (!minPriceInput.value.trim() || !maxPriceInput.value.trim()) {
            return false;
        }

        if (minPrice > maxPrice) {
            alert('Giá tiền bé nhất không thể lớn hơn giá tiền lớn nhất.');
            return false;
        }

        return true;
    }
</script>
@section Scripts {
    <script>
        function submitAddToCartForm(itemId) {
            $.ajax({
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                type: "POST",
                url: "Cart/AddToCart",
                data: JSON.stringify(itemId),
                success: function (response) {
                    Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "Thêm vào giỏ hàng thành công!",
                        showConfirmButton: false,
                        timer: 1500
                    });
                },
                error: function () {
                    window.location.replace('/User/Login');
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            var minPriceInput = document.getElementById('minPriceInput');
            var maxPriceInput = document.getElementById('maxPriceInput');

            function checkAndSetDefaultValue(input) {
                if (input.value === null || input.value.trim() === '') {
                    input.value = 1000;
                    alert('Không được để trống. Giá trị bé nhất là 1000.');
                }
            }

            minPriceInput.addEventListener('blur', function () {
                checkAndSetDefaultValue(minPriceInput);
            });

            maxPriceInput.addEventListener('blur', function () {
                checkAndSetDefaultValue(maxPriceInput);
            });
        });
    </script>
}
